#####################################################################
# In META.yml files, some hash keys contain module names

# Hash key legally containing a colon
=== module_hash_key
--- yaml
---
Foo::Bar: 1
--- perl
[ { 'Foo::Bar' => 1 } ]


# Hash indented
=== hash_indented
--- yaml
---
  foo: bar
--- perl
[ { foo => "bar" } ]


#####################################################################
# Support for literal multi-line scalars

# Declarative multi-line scalar
=== simple_multiline
--- yaml
---
  foo: >
     bar
     baz
--- perl
[ { foo => "bar baz\n" } ]


# Piped multi-line scalar
=== indented
--- yaml
---
- |
  foo
  bar
- 1
--- perl
[ [ "foo\nbar\n", 1 ] ]


# ... with a pointless hyphen
=== indented
--- yaml
---
- |-
  foo
  bar
- 1
--- perl
[ [ "foo\nbar", 1 ] ]


#####################################################################
# Support for YAML version directives

# Simple inline case (comment variant)
=== simple_doctype_comment
--- yaml
--- #YAML:1.0
foo: bar
--- perl
[ { foo => 'bar' } ]
--- nosyck


# Simple inline case (percent variant)
=== simple_doctype_percent
--- yaml
--- %YAML:1.0
foo: bar
--- perl
[ { foo => 'bar' } ]
--- noyamlpm
--- noxs


# Simple header (comment variant)
=== predocument_1_0
--- yaml
%YAML:1.0
---
foo: bar
--- perl
[ { foo => 'bar' } ]
--- noyamlpm
--- nosyck
--- noxs


# Simple inline case (comment variant)
=== predocument_1_1
--- yaml
%YAML 1.1
---
foo: bar
--- perl
[ { foo => 'bar' } ]
--- noyamlpm
--- nosyck


# Multiple inline documents (comment variant)
=== multi_doctype_comment
--- yaml
--- #YAML:1.0
foo: bar
--- #YAML:1.0
- 1
--- #YAML:1.0
foo: bar
--- perl
[ { foo => 'bar' }, [ 1 ], { foo => 'bar' } ]


# Simple pre-document case (comment variant)
=== predocument_percent
--- yaml
%YAML 1.1
---
foo: bar
--- perl
[ { foo => 'bar' } ]
--- noyamlpm
--- nosyck


# Simple pre-document case (comment variant)
=== predocument_comment
--- yaml
\#YAML 1.1
---
foo: bar
--- perl
[ { foo => 'bar' } ]


#####################################################################
# Hitchhiker Scalar

=== hitchhiker scalar
--- yaml
\--- 42
--- perl
[ 42 ]
--- serializes


#####################################################################
# Null HASH/ARRAY

=== null hash in array
--- yaml
---
- foo
- {}
- bar
--- perl
[ [ 'foo', {}, 'bar' ] ]


=== null array in array
--- yaml
---
- foo
- []
- bar
--- perl
[ [ 'foo', [], 'bar' ] ]


=== null hash in hash
--- yaml
---
foo: {}
bar: 1
--- perl
[  { foo => {}, bar => 1 } ]


=== null array in hash
--- yaml
---
foo: []
bar: 1
--- perl
[  { foo => [], bar => 1 } ]


#####################################################################
# Trailing Whitespace

=== trailing whitespace
--- yaml
---
abstract: Generate fractal curves
foo: ~
arr:
  - foo
  - ~
  - 'bar'
--- perl
[ {
    abstract => 'Generate fractal curves',
    foo      => undef,
    arr      => [ 'foo', undef, 'bar' ],
} ]


#####################################################################
# Quote vs Hash

=== hash-like quote
--- yaml
---
author:
  - 'mst: Matt S. Trout <mst@shadowcatsystems.co.uk>'
--- perl
[ { author => [ 'mst: Matt S. Trout <mst@shadowcatsystems.co.uk>' ] } ]


#####################################################################
# Quote and Escaping Idiosyncracies

=== single quote subtleties
--- yaml
---
name1: 'O''Reilly'
name2: 'O''Reilly O''Tool'
name3: 'Double '''' Quote'
--- perl
[ {
    name1 => "O'Reilly",
    name2 => "O'Reilly O'Tool",
    name3 => "Double '' Quote",
} ]


=== single quote subtleties
--- yaml
---
slash1: '\\'
slash2: '\\foo'
slash3: '\\foo\\\\'
--- perl
[ {
    slash1 => "\\\\",
    slash2 => "\\\\foo",
    slash3 => "\\\\foo\\\\\\\\",
} ]


#####################################################################
# Empty Values and Premature EOF

=== empty hash keys
--- yaml
---
foo:    0
requires:
build_requires:
--- perl
[ { foo => 0, requires => undef, build_requires => undef } ]
--- noyamlpm


=== empty array keys
--- yaml
---
- foo
-
-
--- perl
[ [ 'foo', undef, undef ] ]
--- noyamlpm


#####################################################################
# Comment on the Document Line

=== comment header
--- yaml
--- # Comment
foo: bar
--- perl
[ { foo => 'bar' } ]
--- noyamlpm


#####################################################################
# Newlines and tabs

=== special characters
--- yaml
foo: "foo\\\n\tbar"
--- perl
[ { foo => "foo\\\n\tbar" } ]


#####################################################################
# Confirm we can read the synopsis

=== synopsis
--- yaml
---
rootproperty: blah
section:
  one: two
  three: four
  Foo: Bar
  empty: ~
--- perl
[ {
    rootproperty => 'blah',
    section      => {
        one   => 'two',
        three => 'four',
        Foo   => 'Bar',
        empty => undef,
    },
} ]


#####################################################################
# Unprintable Characters

=== unprintable
--- yaml
--- "foo\n\x00"
--- perl
[ "foo\n\0" ]


#####################################################################
# Empty Quote Line

=== empty quote line
--- yaml
---
- foo
\#
- bar
--- perl
[ [ "foo", "bar" ] ]


#####################################################################
# Indentation after empty hash value

=== Indentation after empty hash value
--- yaml
---
Test:
  optmods:
    Bad: 0
    Foo: 1
    Long: 0
  version: 5
Test_IncludeA:
  optmods:
Test_IncludeB:
  optmods:
_meta:
  name: 'test profile'
  note: 'note this test profile'
--- perl
[ {
    Test => {
        optmods => {
            Bad => 0,
            Foo => 1,
            Long => 0,
        },
        version => 5,
    },
    Test_IncludeA => {
        optmods => undef,
    },
    Test_IncludeB => {
        optmods => undef,
    },
    _meta => {
        name => 'test profile',
        note => 'note this test profile',
    },
} ]


#####################################################################
# Spaces in the Key

=== spaces in the key
--- yaml
---
the key: the value
--- perl
[ { 'the key' => 'the value' } ]


#####################################################################
# Ticker #32402

# Tests a particular pathological case

=== Pathological >< case
--- yaml
---
- value
- '><'
--- perl
[ [ 'value', '><' ] ]


#####################################################################
# Special Characters

#yaml_ok(
#    <<'END_YAML',
#---
#- "Ingy d\xC3\xB6t Net"
#END_YAML
#    [ [ "Ingy d\xC3\xB6t Net" ] ],
#);






######################################################################
# Non-Indenting Sub-List

=== Non-indenting sub-list
--- yaml
---
foo:
- list
bar: value
--- perl
[ { foo => [ 'list' ], bar => 'value' } ]
--- noyamlpm


#####################################################################
# Check Multiple-Escaping

# RT #42119: write of two single quotes
=== Multiple escaping of quote ok
--- yaml
--- "A'B'C"
--- perl
[ "A'B'C" ]


# Escapes without whitespace
=== Multiple escaping of escape ok
--- yaml
\--- A\B\C
--- perl
[ "A\\B\\C" ]


# Escapes with whitespace
=== Multiple escaping of escape with whitespace ok
--- yaml
--- 'A\B \C'
--- perl
[ "A\\B \\C" ]


######################################################################
# Check illegal characters that are in legal places

=== Bang in a quote
--- yaml
--- 'Wow!'
--- perl
[ "Wow!" ]


=== Ampersand in a quote
--- yaml
--- 'This&that'
--- perl
[ "This&that" ]
